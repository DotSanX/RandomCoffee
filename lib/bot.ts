import { Bot, Context } from "https://deno.land/x/grammy@v1.32.0/mod.ts";
interface UserInfo {
  state: string;
  info: Record<string, string | number | []>;
}
type MyContext = Context & {
  config: UserInfo;
};
export const bot = new Bot<MyContext>(Deno.env.get("BOT_TOKEN") || "");

bot.use(
  async (ctx, next) => {
    ctx.config = {
      state: "",
      info: {},
    };
    await next();
  },
);

bot.command("start", async (ctx) => {
  await ctx.reply(
    "–ü—Ä–∏–≤–µ—Ç!üëãüèª \n–í–∏–∂—É, —Ç—ã —Ç—É—Ç –≤–ø–µ—Ä–≤—ã–µ. –Ø - –±–æ—Ç –ö–æ—Ñ—Ñ–∏‚òïÔ∏è. –° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –ª—é–¥—å–º–∏, –∫–æ—Ç–æ—Ä—ã–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Ç–æ –∂–µ, —á—Ç–æ –∏ —Ç–µ–±–µ!",
  );
  await ctx.reply(
    "ü§î –ê –∫–∞–∫ –∑–æ–≤—É—Ç —Ç–µ–±—è? \n <b>–£—á—Ç–∏, —á—Ç–æ —Ç–≤–æ–µ –∏–º—è —É–≤–∏–¥—è—Ç –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.</b>",
    { parse_mode: "HTML" },
  );
  ctx.config.state = "setName";
});

bot.on("message", async (ctx) => {
  console.log(ctx.config.state);
  if (ctx.config.state) {
    const state = ctx.config.state;
    switch (state) {
      case "setName":
        ctx.config.state = ctx.msg.text || "";
        ctx.reply("–û—Ç–ª–∏—á–Ω–æ–µ –∏–º—è, " + ctx.config.info.name + "!");
        ctx.reply("–ö—Å—Ç–∞—Ç–∏, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?");
        ctx.config.state = "setAge";
        break;
      case "setAge":
        ctx.config.info.age = Number(ctx.msg.text);
        ctx.reply(
          "–û—Ç–ª–∏—á–Ω–æ! ü§© –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —Ä—è–¥–æ–º —Å –∫–æ—Ç–æ—Ä—ã–º —Ç–µ–±–µ –±—É–¥–µ—Ç —É–¥–æ–±–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è",
        );
        ctx.config.state = "setInterests";
        break;

      default:
        break;
    }
  }
});
